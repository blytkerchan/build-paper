name: 'build-paper'
description: 'Build a Jupyter ipynb file into a PDF and a GitHub Page'
inputs:
    filename:
        description: 'Name of the ipynb file to build'
        required: true
        default: 'paper.ipynb'
    requirements-txt:
        description: 'Requirements file to use to import the dependencies of the paper'
        required: true
        default: 'requirements.txt'
    publish-ghpages:
        description: 'Whether or not to publish the result to GH Pages, overwriting what may be there'
        required: true
        default: false
    python-version:
        description: 'Version of Python to use'
        required: true
        default: '3.10'
    pandoc-version:
        description: 'Version of Python to use'
        required: true
        default: '2.19'
    attachments:
        description: 'Files to include in GH page and artifact'
        required: true
        default: ''

#outputs:
#    time:
#        description: 'The time it took to build'
runs:
    using: 'composite'
    steps:
    - uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python-version }}
    - uses: pandoc/actions/setup@main
      with:
        version: ${{ inputs.pandoc-version }}
    - name: Install TeX Live
      uses: zauguin/install-texlive@v3
      with:
        packages: >
          latex latex-bin xetex tcolorbox pgf tools environ etoolbox pdfcol ltxcmds infwarerr iftex parskip caption
          float xcolor geometry amsmath upquote eurosym ucs fontspec unicode-math fancyvrb grffile adjustbox hyperref
          titling booktabs enumitem ulem soul kvoptions amsfonts metafont jknapltx
    - name: install missing fonts for PDF generation
      run: tlmgr install collection-fontsrecommended
      shell: bash
    - name: build the paper
      shell: bash
      run: |
        python3 -m venv .venv
        . .venv/bin/activate
        pip install -U pip
        pip install -Ur ${{ github.action_path }}/requirements.txt
        pip install -Ur ${{inputs.requirements-txt}}
        jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
        jupyter nbconvert --execute --to notebook --inplace ${{inputs.filename}}
        jupyter nbconvert ${{inputs.filename}} --TagRemovePreprocessor.remove_cell_tags='html_only' --TagRemovePreprocessor.remove_cell_tags='no_latex' --TagRemovePreprocessor.remove_input_tags='latex_only' --to pdf --template ${{ github.action_path }}//templates/latex --output-dir _site --output index
        jupyter nbconvert ${{inputs.filename}} --TagRemovePreprocessor.remove_input_tags='html_only' --TagRemovePreprocessor.remove_cell_tags='latex_only' --TagRemovePreprocessor.remove_cell_tags='no_html' --to html --template classic --output-dir _site --output index
        jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
    - name: Copy attachments
      if: ${{ inputs.attachments != '' }} 
      shell: bash
      run: |
        for f in ${{ inputs.attachments }}; do
          cp ${f} _site
        done  
    - name: Publish to GH Pages
      if: ${{ inputs.publish-ghpages }}
      shell: bash
      run: |
        . .venv/bin/activate
        ghp-import -n -p -f _site
    - name: publish artifacts
      uses: actions/upload-artifact@v4
      with:
        name: paper
        path: _site
 
       
