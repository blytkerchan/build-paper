name: 'build-paper'
description: 'Build a Jupyter ipynb file into a PDF and a GitHub Page'
inputs:
    filename:
        description: 'Name of the ipynb file to build'
        required: true
        default: 'paper.ipynb'
    requirements-txt:
        description: 'Requirements file to use to import the dependencies of the paper'
        required: true
        default: 'requirements.txt'
    build-pdf:
        description: 'Flag to determine whether to build the PDF'
        required: true
        default: true
runs:
    using: 'composite'
    steps:
        - uses: actions/setup-python@v4
          with:
            python-version: '3.10'    
        - uses: pandoc/actions/setup@main
          with:
            version: 2.19
        - name: Install TeX Live
          if: ${{ inputs.build-pdf }}
          uses: zauguin/install-texlive@v2
          with:
            packages: >
            latex latex-bin xetex tcolorbox pgf tools environ etoolbox pdfcol ltxcmds infwarerr iftex parskip caption
            float xcolor geometry amsmath upquote eurosym ucs fontspec unicode-math fancyvrb grffile adjustbox hyperref
            titling booktabs enumitem ulem soul kvoptions amsfonts metafont jknapltx
        - name: install missing fonts for PDF generation
          if: ${{ inputs.build-pdf }}
          run: tlmgr install collection-fontsrecommended
          shell: bash
        - name: build the paper - install prerequisites
          shell: bash
          run: |
            python3 -m venv .venv
            . .venv/bin/activate
            pip install -U pip
            pip install -Ur ${{ github.action_path }}/requirements.txt
            pip install -Ur ${{inputs.requirements-txt}}
        - name: build - the paper - HTML
          shell: bash
          run: |
            python3 -m venv .venv
            . .venv/bin/activate
            jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
            jupyter nbconvert --execute --to notebook --inplace ${{inputs.filename}}
            jupyter nbconvert ${{inputs.filename}} --TagRemovePreprocessor.remove_input_tags='html_only' --TagRemovePreprocessor.remove_cell_tags='latex_only' --TagRemovePreprocessor.remove_cell_tags='no_html' --to html --template classic --output-dir _site --output index
            jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
        - name: build - the paper - PDF
          if: ${{ inputs.build-pdf }}
          shell: bash
          run: |
            python3 -m venv .venv
            . .venv/bin/activate
            jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
            jupyter nbconvert --execute --to notebook --inplace ${{inputs.filename}}
            jupyter nbconvert ${{inputs.filename}} --TagRemovePreprocessor.remove_input_tags='html_only' --TagRemovePreprocessor.remove_cell_tags='latex_only' --TagRemovePreprocessor.remove_cell_tags='no_html' --to html --template classic --output-dir _site --output index
            jupyter nbconvert --ClearOutputPreprocessor.enabled=True --inplace ${{inputs.filename}}
        - name: publish the paper to GH pages
          shell: bash
          run: |
            python3 -m venv .venv
            . .venv/bin/activate
            ghp-import -n -p -f _site
